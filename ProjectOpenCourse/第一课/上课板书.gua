// 使用 chrome 或者 firefox 浏览器打开如下页面
//
// https://www.kuaibiancheng.com/arena
//
// 页面左边是写代码的编辑窗口
// 页面右边是运行代码的结果
//
//
// 代码编辑窗口中, 可以使用 2 个预定义的语句
// 每条语句独占一行
//
//
//
// 画布中有一个黑色三角箭头
// forward(100) 用来把三角箭头往前移动 100 像素
// right(90) 用来把三角箭头往右旋转 90 度
// 三角箭头在一开始的时候朝右
//
//
// 例子 1
// 画一个边长为 101 像素的正三角形的代码如下
// 注意
// 1, 一条语句一行
// 2, 括号必须是英文字符(使用中文字符是无法运行程序的)
//
// forward(101)
// right(120)
// forward(101)
// right(120)
// forward(101)
// right(120)
//
//
//
// 根据例子 1 完成下面的题目
// 不会写的题目先记下来, 上课重点听
// --------
// 题目
// --------
//
// 作业 1
// 画一个边长为 10 像素的正三角形
//
//
// 作业 2
// 画一个边长为 99 像素的正方形
// var x = 90
// var degree = 90
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)

//
//
// 作业 3
// 画一个宽高分别为 168, 99 像素的矩形
// var w = 168
// var h = 99
// var degree = 90
// forward(w)
// right(degree)
// forward(h)
// right(degree)
// forward(w)
// right(degree)
// forward(h)
// right(degree)

//
//
// 作业 4
// 画一个边长为 33 像素的正三角形
// var x = 33
// var degree = 120
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
//
//
// 作业 5
// 画一个边长为 106 像素的正方形
// var x = 106
// var degree = 90
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
//
//
// 作业 6
// 画一个宽高分别为 68, 59 像素的矩形
// var w = 68
// var h = 59
// var degree = 90
// forward(w)
// right(degree)
// forward(h)
// right(degree)
// forward(w)
// right(degree)
// forward(h)
// right(degree)
//
//
// 作业 7
// 画一个边长为 79 的正五边形
// 提示, 往右旋转 72 度
// var x = 79
// var degree = 72
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
//
//
// 作业 8
// 画一个边长为 63 的正六边形
// 提示, 往右旋转 60 度
// var x = 63
// var n = 6
// var 内角 = (n - 2) * 180 / n
// var degree = 180 - 内角
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
//
//
// 作业 9
// 画一个边长为 159 的正七边形
// 提示, 往右旋转 52 度
// var x = 159
// var n = 7
// var 内角 = (n - 2) * 180 / n
// var degree = 180 - 内角
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
// forward(x)
// right(degree)
//
//
// 作业 10
// 画一个边长为 93 的正十边形
// 提示, 往右旋转 36
// var x = 33
// var n = 20
// var 内角 = (n - 2) * 180 / n
// var degree = 180 - 内角
// // 循环 10 次的方法如下
// // 首先定义一个变量用于表示循环的次数，一般我们会用 i
// var i = 0
// // while 后面的语句是条件
// // 条件如果成立，执行代码块内的内容
// // 条件如果不成立，结束循环
// while(i < n) {
//     forward(x)
//     right(degree)
//     // 特别注意，循环结束前一定要改变 i 的值
//     // 否则循环永远不会结束的
//     i = i + 1
// }

// 函数是什么？
// 函数是用来消除大段重复代码的工具
// 所有主流的编程语言都有函数这个功能

// 定义一个函数，用来画一个边长为 100 像素的正三角形
// const sjx = function() {
//     var x = 100
//     var n = 3
//     var 内角 = (n - 2) * 180 / n
//     var degree = 180 - 内角
//     var i = 0
//     while(i < n) {
//         forward(x)
//         right(degree)
//         // 特别注意，循环结束前一定要改变 i 的值
//         // 否则循环永远不会结束的
//         i = i + 1
//     }
// }

// 程序是按照顺序从上到下执行的，所以要先定义再使用
// 函数名加上一对括号，就表示调用函数（调用就是使用的意思）

// 函数和普通变量是一样可以被赋值给另一个变量的
// var triangle = sjx
// sjx()
// forward(50)
// triangle()


// 函数使用一个叫做 参数 的概念来增加灵活性
// const sjx = function(bianchang) {
//     var x = bianchang
//     var n = 3
//     var 内角 = (n - 2) * 180 / n
//     var degree = 180 - 内角
//     var i = 0
//     while(i < n) {
//         forward(x)
//         right(degree)
//         // 特别注意，循环结束前一定要改变 i 的值
//         // 否则循环永远不会结束的
//         i = i + 1
//     }
// }
//
// sjx(100)
// sjx(150)

// const 洗手 = function() {
//     ...
// }
//
// const 坐下 = function() {
//     ...
// }
//
// const 吃饭 = function() {
//     ...
// }
//
// const 洗碗 = function() {
//     ...
// }
//
// const 吃晚饭 = function() {
//     洗手()
//     坐下()
//     吃饭()
//     洗碗()
// }

// 函数可以支持多个参数，不同参数之间用英文逗号分隔
// const polygon = function(bianchang, bianshu) {
//     var x = bianchang
//     var n = bianshu
//     var 内角 = (n - 2) * 180 / n
//     var degree = 180 - 内角
//     var i = 0
//     while(i < n) {
//         forward(x)
//         right(degree)
//         // 特别注意，循环结束前一定要改变 i 的值
//         // 否则循环永远不会结束的
//         i = i + 1
//     }
// }
//
// polygon(100, 3)
// polygon(50, 7)
// polygon(100, 4)

//
//
//
//
//
//
//
//
// 第一节课的内容大纲如下, 看不懂很正常, 没学过的术语就是看不懂的，上完就懂啦
// 变量
// 循环
// 四则运算
// 函数
// 带参数的函数
// 多参数的函数
// 变量命名规则
// 代码规范


// 取名字的简单规则
// 变量名（函数名就是变量名）只能包括 字母（汉字也是字母），下划线（_），数字
// 变量名不能以数字开头
// 变量名大小写敏感（a A 是两个不同的变量）
// 大多数编程语言，不能用汉字当变量名
// 变量名不能是 var const function while 这样的被语言使用了的名字

// 函数的默认参数
const polygon = function(bianchang, bianshu=3) {
    var x = bianchang
    var n = bianshu
    var 内角 = (n - 2) * 180 / n
    var degree = 180 - 内角
    var i = 0
    while(i < n) {
        forward(x)
        right(degree)
        // 特别注意，循环结束前一定要改变 i 的值
        // 否则循环永远不会结束的
        i = i + 1
    }
}

polygon(100)
polygon(50, 7)








// .
