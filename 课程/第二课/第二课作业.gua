// 本作业需要安装新版 gualang-2.5.0 编译器
// 请用下面的链接中的方法来安装配置 2.5.0 版本的编译器
// https://github.com/kuaibiancheng/ProjectOpenCourse/wiki



// 注意, 本次作业中提到的所有国旗，我们只画黑色线框不填色
// 中国国旗的尺寸是 300 * 200
// 其他所有国旗的矩形长宽都定为 200 * 150(包括瑞士国旗)


// 作业 1
// 实现一个圆形函数
// x y 是圆形的圆心
// r 是半径
// circle(x, y, r)


// 实现步骤如下
// 第一节课的作业 polygon 在边数很大的时候就像是一个近似源
// 而实际上电脑是通过模拟多边形来实现画一个圆的
// 在画 polygon 的时候需要从左上角开始
// 而我们这个 circle 的 x y 参数是表示圆心的坐标
// 所以要先从圆心移动到左上角

// 需要注意的是，按照下面的写法
// 画出的圆会多处一条半径线，这一条线无需理会

// 1. 我们用正 36 边形来模拟圆形
//
// 2. 正多边形的周长是 n(边数) * l(边长),
//  而它的外接圆的周长是 2 * math.pi * r
//  在程序中 math.pi 代表了圆周率，你也可以用 3.1415926535 替代
//  我们这里把这两个周长看做相等
//  (因为我们只是用正多边形近似模拟, 不是精准画圆, 小小偏差可以接受)
//  所以可以算出 l(边长) = (2 * math.pi * r) / n
//  上面的公式中 l 是多边形边长, r 是圆半径, n 是边数
//
// 3. 初始情况下箭头是朝右的, 所以先往左转
//  左转 90 度等于右转 270 度
//  所以你需要自己实现一个 left 函数
//  (或者直接 right(270) 或者 right(-90))
//  这个角度的具体计算原理见下图
//  这里直接把公式给出如下, 你可以直接使用
//  var angle = (90 + (360 / n) / 2)
//  right(-angle)
// 4. 转完之后, 移动 r, 也就是半径的距离
// 5. 这样就移动到了左上角的位置, 但此时角度并不是朝右的,
//  刚刚往左转动了 angle, 现在往右转回来这个角度
//  right(angle)
//  当然，也可以用 setHeading(0) 来
// 6. 这时候你就在正多边形的顶部横边的左顶点并且方向朝右了
//  以此为起点画一个正 36 边形即可
const jump = function(x, y) {
    penup()
    goto(x, y)
    pendown()
}

// const circle = function(x, y, r) {
//     var n = 36
//     var length = (2 * 3.1415926535 * r) / n
//     var degree = 360 / n
//     var i = 0
//     var angle = (90 + (360 / n) / 2)
//     jump(x,y)
//     right(-angle)
//     forward(r)
//     right(angle)
//     while(i < n) {
//         forward(length)
//         right(degree)
//         i = i + 1
//     }
// }
// polygon(-100,-60, 50)

const circle = function(x, y, r) {
    jump(x,y)  // x y 是左上角坐标
    setHeading(0)

    var n = 36
    var l = 2 * math.pi * r / n
    var degree = 360 / n
    var i = 0
    var angle = (90 + (360 / n) / 2)

    right(-angle)
    forward(r)
    right(angle)
    while(i < n) {
        forward(l)
        right(degree)
        i = i + 1
    }
}

// circle(-100, 0, 50)
// circle(0, 0, 50)


// 作业 2
// 实现一个矩形函数
// x y 是矩形中心的坐标
// w h 是宽高
// center_rect(x, y, w, h)

// 在第一课的作业中已经实现了 rect 函数,
// 不过 rect 函数中的 x, y 是表示左上角坐标,
// 现在需要实现的 center_rect 函数的 x, y 是矩形中心的坐标,
// 所以应该先从矩形中心移动到矩形左上角, 然后调用 rect 函数

// 实现步骤如下
// 1. 根据矩形中心坐标 x, y 计算出左上角坐标 x1, y1
// 2. 调用 rect 函数, 传入的参数分别为左上角坐标, 宽和高
const rect = function(x, y, w, h) {
    jump(x, y)
   // 设置朝向, 确保箭头朝向 右边
   // 当然如果是用 goto 来画的话, 就不用关心朝向
   setHeading(0)
   // 循环画正方形
   // 当然, 你可以用 goto 来画
   // 只需要计算一下四个顶点的坐标 (这很简单)
   var i = 0
   while (i < 2) {
       forward(w)
       right(90)
       forward(h)
       right(90)
       i = i + 1
   }
}

const center_rect = function(x, y, w, h) {
    var x1 = x - w/2
    var y1 = y - h/2
    rect(x1, y1, w, h)
}

// center_rect(0,0,100,50)


// 作业 3
// 实现一个正五角星(国旗大星星那种)函数
// x y 是五角星顶部横边的左边点坐标
// length 是一条线的长度
// 这是一个正五角星
// penta(x, y, length)

// 实现步骤如下
// 1. 正五角星需要重复 5 次, 所以需要循环 5 次
// 2. 每次循环中前进 length 的长度, 右转 144 度
// 3. 别忘了循环的时候 i 增加 1
const penta = function(x, y, length){
    var i = 0
    var n = 5
    var degree = 144
    jump(x, y)
    while (i<n){
        forward(length)
        right(degree)
        i = i + 1
    }
}

// penta(-100, 0, 100)
// penta(0, 0, 100)






// 作业 4
// 实现一个函数画日本国旗
// 调用 2 个函数画日本国旗
// 一个画背景的白色矩形
// 一个画中间的圆，圆的直径必须为国旗高的 3/5
// x, y 是国旗左上角座标
// japan(x, y)


// 实现步骤如下
// 日本国旗由两部分组成, 矩形和圆形. 所以依次画出这两个图形
// 1. 调用 center_rect 函数画一个矩形
// 2. 调用 circle 函数画一个圆形*/

const japan = function(x, y) {
    // x, y 是左上角坐标
    var w = 200
    var h = 150

    var x1 = x + w /2
    var y1 = y + h /2
    var r = h * 0.3
    center_rect(x1, y1, w, h)
    // jump(x, y)
    circle(x1, y1, r)
}
// japan(0, -200)
// japan(0, 0)




// 作业 5
// 实现一个五角星函数
// x y 是五角星的中心点坐标
// r 是五角星外接圆的半径
// penta1(x, y, r)

// 为了实现这个函数, 你需要使用三角函数计算顶点在圆上的坐标
// 你不需要懂这个数学计算过程, 直接拿来用即可
// 我们这里帮你实现了正弦余弦函数如下
const sin = function(degree) {
    // 这里的 sin 函数接受弧度作为参数
    // 我们这个函数接受角度, 下面是弧度转角度的公式
    var radians = degree * math.pi / 180
    return math.sin(radians)
}
// log('sin60', sin(60))
// log('sin30', sin(30))

const cos = function(degree) {
    var radians = degree * math.pi / 180
    return math.cos(radians)
}

// 实现步骤如下
// 1. 正五角星顶角的一半是 18 度，var du = 18
// 2. 五角星顶部横边的左边点 B 的 x 坐标为 var x1 = x - cos(du) * r
// 3. 五角星顶部横边的左边点 B 的 y 坐标为 var y1 = y - sin(du) * r
// 4. 五角星的长度为 var length = cos(du) * r * 2
// 5. 调用作业 3 的函数 penta(x1, y1, length)

const penta1 = function(x, y, r) {
    var du = 18
    var x1 = x - cos(du) * r
    var y1 = y - sin(du) * r
    var length = cos(du) * r * 2
    penta(x1, y1, length)
    // circle(x, y, r) // x y 是中心坐标  画外接圆进行验证
}

// penta1(-50, -30, 50)




// 作业 6
// 实现一个函数画中国国旗(以下国旗题目都是如此 不重复了)
// 五角星不要求角度朝向（统一用正五角星）
// 学有余力的话, 可以调整五个五角星的角度为标准角度
// 但是要求尺寸必须符合下图中的比例
// 中国国旗的尺寸是 300 * 200
// x, y 是国旗左上角座标（后面的题都是这个要求，不再重复说明）
// china(x, y)

// 实现步骤
// 中国国旗由两部分组成, 矩形和 5 个五角星, 计算好比例, 依次画完
// 1. 使用 rect 函数画一个矩形
// 2. 计算比例，画 5 个五角星(调用 5 次)

// 国旗比例要求：
// https://www.douban.com/note/509127465/
const penta2 = function(x, y, r) {
    var du = 18
    var x1 = x - cos(du) * r
    var y1 = y - sin(du) * r
    var length = cos(du) * r * 2
    right(18)
    penta(x1, y1, length)
    // circle(x, y, r) // x y 是中心坐标  画外接圆进行验证
}

const china = function(x, y) {
    var w = 300
    var h = 200
    rect(x, y, w, h)

    var x1 = 1 / 6 * w
    var y1 = 1 / 4 * h
    var r1 = 3 / 20 * h

    var x2 = 1 / 3 * w
    var y2 = 1 / 10 * h
    var r2 = 1 / 20 * h

    var x3 = 2 / 5 * w
    var y3 = 1 / 5 * h

    var x4 = 2 / 5 * w
    var y4 = 7 / 20 * h

    var x5 = 1 / 3 * w
    var y5 = 9 / 20 * h

    penta1(x1, y1, r1)
    penta1(x2, y2, r2)
    penta1(x3, y3, r2)
    penta1(x4, y4, r2)
    penta1(x5, y5, r2)
    //还需要设置角度 使用penata2传入角度的参数
}

// china(-30, -40)




// 作业 7
// 实现一个函数画法国国旗
// france(x, y)

// 实现步骤
// 法国国旗由三个纵向矩形组成, 依次画出这三个矩形
// 1. 计算出三个矩形的宽, 均为 1/3 * w
// 2. 计算出三个矩形的左上角坐标, 分别为 x1, y1、x2, y2 和 x3, y3
// 3. 调用三次 rect 函数, 每次传入不一样的参数
// const france = function(x, y) {
//     var w = 300
//     var h = 200
//     var i = 0
//     var n = 3
//     while(i < n) {
//         var w1 = w/3
//         var h1 = h
//         var x1 = x + i * (1/3 * w)
//         rect(x1, y, w1, h1)
//         i = i + 1
//     }
// }
const france = function(x, y) {
    var w = 200
    var h = 150
    var w1 = w/3
    var x1 = x
    var x2 = x + w1
    var x3 = x + w1 + w1
    rect(x1, y, w1, h)
    rect(x2, y, w1, h)
    rect(x3, y, w1, h)
    // center_rect(x, y, w, h)
    // center_rect(x, y, w1, h)
}
// france(-100, -30)
// https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1547200454269&di=2f5a17ee4ced5db63e125a7b954d0c7e&imgtype=0&src=http%3A%2F%2Fpic.58pic.com%2F58pic%2F13%2F83%2F66%2F55a58PICheG_1024.png





// 作业 8
// 画德国国旗
// germany(x, y)

// 实现步骤
//     德国国旗由三个横向矩形组成, 依次画出这三个矩形

// 分步提示:
// 1. 计算出三个矩形的高, 均为 1/3 * h
// 2. 计算出三个矩形的左上角坐标, 分别为 x1, y1、x2, y2 和 x3, y3
// 3. 调用三次 rect 函数, 每次传入不一样的参数

const germany = function(x, y) {
    var w = 200
    var h = 150
    var h1 = h/3
    var y1 = y
    var y2 = y + h1
    var y3 = y + h1 + h1
    rect(x, y1, w, h1)
    rect(x, y2, w, h1)
    rect(x, y3, w, h1)
}

// germany(-100, -30)

// https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1547200521471&di=4e3d41e58fd017fffbcdfbb4d33cacc0&imgtype=0&src=http%3A%2F%2Fpic.90sjimg.com%2Fdesign%2F01%2F40%2F91%2F47%2F58fddf9563923.png





// 作业 9
// 画 冈比亚国旗
// gambia(x, y)

// 实现步骤
//     冈比亚国旗和德国国旗类似, 中间的矩形由一个大纵向矩形和两个小纵向矩形组成,
//         所以画 5 个矩形p
// 1. 最上面和最下面两个矩形和德国国旗一致
// 2. 中间的矩形分成三个矩形, 高度占比分别为 1:6:1, 分别计算出这三个矩形的中心坐标
// 3. 分别计算中间三个矩形的长度和高度
// 4. 使用 center_rect 画出 5 个矩形, 每次传入的参数不一致

// https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1547200557222&di=c371148958d1d03a56c9b8fb915fa67a&imgtype=0&src=http%3A%2F%2Fimg5.cache.netease.com%2Fcnews%2F2013%2F11%2F15%2F20131115084103a7ae1_550.png


// const gambia = function(x, y) {
//     var w = 300
//     var h = 200
//     var i = 0
//     var n = 5
//     while(i <= n) {
//         if (i == 1){
//             var w1 = w
//             var h1 = h/3
//             var x1 = x
//             var y1 = y
//             center_rect(x1, y1, w1, h1)
//         }else if (i == 2){
//             // center_rect(-100, -50, 300, 200/3)
//             // center_rect(-100, -50+200/3/2 + 200/3/8/2, 300, 200/3/8)
//             var w1 = w
//             var h1 = (1/3/8) * h
//             var x1 = x
//             var y1 = y + h/3/2 + h1/2
//             center_rect(x1, y1, w1, h1)
//         }else if (i == 3){
//             var w1 = w
//             var h1 = (1/4) * h
//             var x1 = x
//             var y1 = y + h/3/2 + h/3/8 + h/3/8/2*6
//             center_rect(x1, y1, w1, h1)
//         }else if (i == 4){
//             var w1 = w
//             var h1 = (1/3/8) * h
//             var x1 = x
//             var y1 = y + h/3/2 + h/3/8*7 + h/3/8/2
//             center_rect(x1, y1, w1, h1)
//         }else if(i==5){
//             var w1 = w
//             var h1 = (1/3) * h
//             var x1 = x
//             var y1 = y + h/3*2
//             center_rect(x1, y1, w1, h1)
//         }
//         i = i + 1
//     }
// }

const gambia = function(x, y) {
    var w = 300
    var h = 200

    // x不变 x y  是左上角左边
    var x1 = x + w / 2  //中心点的x坐标

    var y1 = y + h / 6  // 第一个矩形y
    var y2 = y + h / 3 + h / 48
    var y3 = y + h / 2
    var y4 = y + h / 48 * 31
    var y5 = y + h / 3 * 2 + h / 6

    var h1 = h / 3
    var h2 = h / 24
    var h3 = h / 4
    var h4 = h / 24
    var h5 = h / 3
    center_rect(x1, y1, w, h1)
    center_rect(x1, y2, w, h2)
    center_rect(x1, y3, w, h3)
    center_rect(x1, y4, w, h4)
    center_rect(x1, y5, w, h5)
}


// gambia(-100, -100)
// center_rect(-100, -50, 300, 200/3)
// center_rect(-100, -50+200/3/2 + 200/3/8/2, 300, 200/3/8)
// center_rect(-100, -50+200/3/2 + 200/3/8/2 + 200/3/8*6/2, 300, 200/3/8*6)

// 作业 10
// 画 瑞士国旗
// switzerland(x, y)

// 实现步骤
//     瑞士国旗由一个大矩形和两个小矩形组成, 需要画三个矩形

// 分步提示:
// 1. 瑞士国旗中的两个矩形大小是一样的, 都按照长边 75, 短边 25 来计算
// 2. 计算出三个矩形的中心点坐标、长、宽
// 3. 依次画出这三个矩形

// https://gss1.bdstatic.com/-vo3dSag_xI4khGkpoWK1HF6hhy/baike/w%3D268%3Bg%3D0/sign=7adaad187b3e6709be0042f903fcf800/7acb0a46f21fbe09b63f922b6f600c338744ada8.jpg

// const switzerland = function(x, y) {
//     var i  = 0
//     var n = 3
//     var w = 300
//     var h = 200
//     while(i <= n) {
//         if (i == 1){
//             center_rect(x, y, w, h)
//         }else if (i == 2) {
//             var w1 = 75
//             var h1 = 25
//             center_rect(x, y, w1, h1)
//         }else if (i == 3) {
//             var w1 = 25
//             var h1 = 75
//             center_rect(x, y, w1, h1)
//         }
//
//         i = i + 1
//     }
// }

const switzerland = function(x, y) {
    var w = 200
    var h = 150
    var w1 = 75
    var h1 = 25
    var x1 = x + w / 2
    var y1 = y + h / 2
    center_rect(x1, y1, w, h)
    center_rect(x1, y1, w1, h1)
    center_rect(x1, y1, h1, w1)
}
// switzerland(-100,-50)

// 作业 11
// 画朝鲜国旗
//

// 提示:
//     朝鲜国旗从上往下依次为蓝色矩形、白色矩形、红色矩形、白色矩形和蓝色矩形,
//     这些矩形的高度比分别为 4:1:15:1:4, 红色矩形里包含了一个圆形和一个五角星
// 圆形的直径和红色矩形的高度的比为 2:3, 圆形的圆点 x 坐标在国旗宽的 2/5 处
// 使用这些数据计算出各个图形的坐标, 然后画出来

// 实现步骤
// 1. 分别计算出 5 个矩形的坐标和长宽
// 2. 计算出圆形的圆心, 圆形的直径和红色矩形的高度的比为 2:3
//      圆形的圆点 x 坐标在国旗宽的 2/5 处
// 3. 画 5 个矩形
// 4. 画圆形
// 5. 画五角星
const northkorea = function(x, y) {
    var w = 200
    var h = 150

    var h1 = 4 / 25 * h
    var h2 = 1 / 25 * h
    var h3 = 15 / 25 * h
    var h4 = 1 / 25 * h
    var h5 = 4 / 25 * h

    var x1 = x
    var y1 = y
    var y2 = y1 + h1
    var y3 = y2 + h2
    var y4 = y3 + h3
    var y5 = y4 + h4

    rect(x1, y1, w, h1)
    rect(x1, y2, w, h2)
    rect(x1, y3, w, h3)
    rect(x1, y4, w, h4)
    rect(x1, y5, w, h5)

    // 画圆形和五角星
    var xn = x + 2 / 5 * w
    var yn = y + h / 2
    var rn = h3 / 3
    circle(xn, yn, rn)
    penta1(xn, yn, rn)

}


// northkorea(-100, -50)

// http://img1.cache.netease.com/catchpic/6/63/63D56955DF111752ADEDDF94ABC830F8.jpg


// 写出上述作业后, 如果你实在无聊, 还可以画美国国旗
